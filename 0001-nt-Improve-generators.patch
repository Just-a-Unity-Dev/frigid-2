From 416c15dc98cbcf794d9dff26b80052ded4ba7244 Mon Sep 17 00:00:00 2001
From: Kevin Zheng <kevinz5000@gmail.com>
Date: Wed, 2 Nov 2022 21:13:52 -0700
Subject: [PATCH] [nt] Improve generators

---
 Content.Client/OuterRim/GeneratorWindow.xaml    |  2 ++
 Content.Client/OuterRim/GeneratorWindow.xaml.cs |  3 ++-
 .../OuterRim/Generator/GeneratorSystem.cs       | 11 ++++++++++-
 .../Generator/SharedGeneratorComponent.cs       | 17 +++++++----------
 .../OuterRim/Generator/SharedGeneratorSystem.cs | 10 ----------
 .../Structures/Power/Generation/generators.yml  |  2 +-
 6 files changed, 22 insertions(+), 23 deletions(-)

diff --git a/Content.Client/OuterRim/GeneratorWindow.xaml b/Content.Client/OuterRim/GeneratorWindow.xaml
index b2d81aad01..7c06228bb5 100644
--- a/Content.Client/OuterRim/GeneratorWindow.xaml
+++ b/Content.Client/OuterRim/GeneratorWindow.xaml
@@ -9,6 +9,8 @@
                 <!-- Power -->
                 <Label Text="Throttle"/>
                 <Slider Name="TargetPower" MinWidth="200" MinValue="0" MaxValue="1"/>
+                <Label Text="Power Output"/>
+                <Label Name="Output" Text="?"/>
                 <Label Text="Efficiency:"/>
                 <Label Name="Efficiency" Text="???%"/>
                 <Label Text="Fuel use:"/>
diff --git a/Content.Client/OuterRim/GeneratorWindow.xaml.cs b/Content.Client/OuterRim/GeneratorWindow.xaml.cs
index fe66b8df5b..77db0a061a 100644
--- a/Content.Client/OuterRim/GeneratorWindow.xaml.cs
+++ b/Content.Client/OuterRim/GeneratorWindow.xaml.cs
@@ -30,7 +30,8 @@ public void Update(GeneratorComponentBuiState state)
         // ReSharper disable once CompareOfFloatsByEqualityOperator
         if (_lastState?.TargetPower != state.TargetPower)
             TargetPower.SetValueWithoutEvent(state.TargetPower);
-        Efficiency.Text = SharedGeneratorSystem.CalcFuelEfficiency(state.TargetPower).ToString("P1");
+        Output.Text = (state.Output/1000).ToString("F1") + " kW";
+        Efficiency.Text = state.Efficiency.ToString("P1");
         FuelFraction.Value = state.RemainingFuel - (int) state.RemainingFuel;
         FuelLeft.Text = ((int) MathF.Floor(state.RemainingFuel)).ToString();
         _lastState = state;
diff --git a/Content.Server/OuterRim/Generator/GeneratorSystem.cs b/Content.Server/OuterRim/Generator/GeneratorSystem.cs
index 88ed7a0f49..2d2b3e40ed 100644
--- a/Content.Server/OuterRim/Generator/GeneratorSystem.cs
+++ b/Content.Server/OuterRim/Generator/GeneratorSystem.cs
@@ -51,7 +51,11 @@ public override void Update(float frameTime)
             gen.RemainingFuel = MathF.Max(gen.RemainingFuel - (fuelRate * frameTime), 0.0f);
 
             // Plasma: 400 kJ/sheet
-            supplier.MaxSupply = fuelRate * 400000f * CalcFuelEfficiency(gen.TargetPower);
+            var energyIn = fuelRate * 400000f;
+            supplier.MaxSupply = energyIn * CalcFuelEfficiency(gen.TargetPower);
+
+            gen.Output = supplier.SupplyRampPosition;
+            gen.Efficiency = gen.Output / energyIn;
 
             UpdateUi(gen);
         }
@@ -64,4 +68,9 @@ private void UpdateUi(SharedGeneratorComponent comp)
 
         _uiSystem.TrySetUiState(comp.Owner, GeneratorComponentUiKey.Key, new GeneratorComponentBuiState(comp));
     }
+
+    private static float CalcFuelEfficiency(float targetPower)
+    {
+        return (float)(targetPower/2 + 0.2);
+    }
 }
diff --git a/Content.Shared/OuterRim/Generator/SharedGeneratorComponent.cs b/Content.Shared/OuterRim/Generator/SharedGeneratorComponent.cs
index a94f9530a7..3016881c0c 100644
--- a/Content.Shared/OuterRim/Generator/SharedGeneratorComponent.cs
+++ b/Content.Shared/OuterRim/Generator/SharedGeneratorComponent.cs
@@ -14,14 +14,11 @@ public sealed class SharedGeneratorComponent : Component
     [DataField("targetPower"), ViewVariables(VVAccess.ReadWrite)]
     public float TargetPower = 0;
 
-    [DataField("optimalPower"), ViewVariables(VVAccess.ReadWrite)]
-    public float OptimalPower = 15_000.0f;
-
-    [DataField("optimalBurnRate"), ViewVariables(VVAccess.ReadWrite)]
-    public float OptimalBurnRate = 1 / 4.0f; // Once every 45 seconds.
-
     [DataField("fuelMaterial"), ViewVariables(VVAccess.ReadWrite)]
     public string FuelMaterial = "Plasma";
+
+    public float Efficiency = 0;
+    public float Output = 0;
 }
 
 /// <summary>
@@ -46,15 +43,15 @@ public sealed class GeneratorComponentBuiState : BoundUserInterfaceState
 {
     public float RemainingFuel;
     public float TargetPower;
-    public float OptimalPower;
-    public float OptimalBurnRate; // Once every 120 seconds.
+    public float Efficiency;
+    public float Output;
 
     public GeneratorComponentBuiState(SharedGeneratorComponent component)
     {
         RemainingFuel = component.RemainingFuel;
         TargetPower = component.TargetPower;
-        OptimalPower = component.OptimalPower;
-        OptimalBurnRate = component.OptimalBurnRate;
+        Efficiency = component.Efficiency;
+        Output = component.Output;
     }
 }
 
diff --git a/Content.Shared/OuterRim/Generator/SharedGeneratorSystem.cs b/Content.Shared/OuterRim/Generator/SharedGeneratorSystem.cs
index 50044c5e32..aad51de905 100644
--- a/Content.Shared/OuterRim/Generator/SharedGeneratorSystem.cs
+++ b/Content.Shared/OuterRim/Generator/SharedGeneratorSystem.cs
@@ -5,14 +5,4 @@
 /// </summary>
 public abstract class SharedGeneratorSystem : EntitySystem
 {
-    /// <inheritdoc/>
-    public override void Initialize()
-    {
-
-    }
-
-    public static float CalcFuelEfficiency(float targetPower)
-    {
-        return (float)(targetPower/2 + 0.2);
-    }
 }
diff --git a/Resources/Prototypes/Entities/Structures/Power/Generation/generators.yml b/Resources/Prototypes/Entities/Structures/Power/Generation/generators.yml
index bd4d3c2716..97e9ac889f 100644
--- a/Resources/Prototypes/Entities/Structures/Power/Generation/generators.yml
+++ b/Resources/Prototypes/Entities/Structures/Power/Generation/generators.yml
@@ -162,7 +162,7 @@
   suffix: Plasma, 5kW
   components:
   - type: PowerSupplier
-    supplyRate: 30000
+    supplyRampRate: 1000
   - type: Generator
   - type: ActivatableUI
     key: enum.GeneratorComponentUiKey.Key
-- 
2.39.0


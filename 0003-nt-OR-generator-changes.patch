From bf0017d0039148ce56740c89c260c477ba7b12fb Mon Sep 17 00:00:00 2001
From: Kevin Zheng <kevinz5000@gmail.com>
Date: Wed, 2 Nov 2022 17:44:06 -0700
Subject: [PATCH 3/3] [nt] OR generator changes

---
 Content.Client/OuterRim/GeneratorBoundUserInterface.cs |  2 +-
 Content.Client/OuterRim/GeneratorWindow.xaml           |  4 ++--
 Content.Client/OuterRim/GeneratorWindow.xaml.cs        |  6 +++---
 Content.Server/OuterRim/Generator/GeneratorSystem.cs   | 10 ++++++----
 .../OuterRim/Generator/SharedGeneratorComponent.cs     |  8 +++++---
 .../OuterRim/Generator/SharedGeneratorSystem.cs        |  4 ++--
 .../Structures/Power/Generation/generators.yml         |  2 ++
 7 files changed, 21 insertions(+), 15 deletions(-)

diff --git a/Content.Client/OuterRim/GeneratorBoundUserInterface.cs b/Content.Client/OuterRim/GeneratorBoundUserInterface.cs
index c878aa9693..3fa0223297 100644
--- a/Content.Client/OuterRim/GeneratorBoundUserInterface.cs
+++ b/Content.Client/OuterRim/GeneratorBoundUserInterface.cs
@@ -32,7 +32,7 @@ protected override void Dispose(bool disposing)
        _window?.Dispose();
     }
 
-    public void SetTargetPower(int target)
+    public void SetTargetPower(float target)
     {
         SendMessage(new SetTargetPowerMessage(target));
     }
diff --git a/Content.Client/OuterRim/GeneratorWindow.xaml b/Content.Client/OuterRim/GeneratorWindow.xaml
index 563e048cb1..b2d81aad01 100644
--- a/Content.Client/OuterRim/GeneratorWindow.xaml
+++ b/Content.Client/OuterRim/GeneratorWindow.xaml
@@ -7,8 +7,8 @@
         <BoxContainer Orientation="Vertical" HorizontalExpand="True" SizeFlagsStretchRatio="2">
             <GridContainer Margin="2 0 0 0" Columns="2">
                 <!-- Power -->
-                <Label Text="Target Power (KW):"/>
-                <SpinBox Name="TargetPower"/>
+                <Label Text="Throttle"/>
+                <Slider Name="TargetPower" MinWidth="200" MinValue="0" MaxValue="1"/>
                 <Label Text="Efficiency:"/>
                 <Label Name="Efficiency" Text="???%"/>
                 <Label Text="Fuel use:"/>
diff --git a/Content.Client/OuterRim/GeneratorWindow.xaml.cs b/Content.Client/OuterRim/GeneratorWindow.xaml.cs
index d60c5f3666..fe66b8df5b 100644
--- a/Content.Client/OuterRim/GeneratorWindow.xaml.cs
+++ b/Content.Client/OuterRim/GeneratorWindow.xaml.cs
@@ -16,7 +16,7 @@ public GeneratorWindow(GeneratorBoundUserInterface bui, EntityUid vis)
         IoCManager.InjectDependencies(this);
 
         EntityView.Sprite = IoCManager.Resolve<IEntityManager>().GetComponent<SpriteComponent>(vis);
-        TargetPower.ValueChanged += (_, args) =>
+        TargetPower.OnValueChanged += (args) =>
         {
             bui.SetTargetPower(args.Value);
         };
@@ -29,8 +29,8 @@ public void Update(GeneratorComponentBuiState state)
     {
         // ReSharper disable once CompareOfFloatsByEqualityOperator
         if (_lastState?.TargetPower != state.TargetPower)
-            TargetPower.OverrideValue((int)(state.TargetPower / 1000.0f));
-        Efficiency.Text = SharedGeneratorSystem.CalcFuelEfficiency(state.TargetPower, state.OptimalPower).ToString("P1");
+            TargetPower.SetValueWithoutEvent(state.TargetPower);
+        Efficiency.Text = SharedGeneratorSystem.CalcFuelEfficiency(state.TargetPower).ToString("P1");
         FuelFraction.Value = state.RemainingFuel - (int) state.RemainingFuel;
         FuelLeft.Text = ((int) MathF.Floor(state.RemainingFuel)).ToString();
         _lastState = state;
diff --git a/Content.Server/OuterRim/Generator/GeneratorSystem.cs b/Content.Server/OuterRim/Generator/GeneratorSystem.cs
index afe6326ac4..88ed7a0f49 100644
--- a/Content.Server/OuterRim/Generator/GeneratorSystem.cs
+++ b/Content.Server/OuterRim/Generator/GeneratorSystem.cs
@@ -22,7 +22,7 @@ public override void Initialize()
 
     private void OnTargetPowerSet(EntityUid uid, SharedGeneratorComponent component, SetTargetPowerMessage args)
     {
-        component.TargetPower = args.TargetPower * 1000;
+        component.TargetPower = args.TargetPower;
     }
 
     private void OnInteractUsing(EntityUid uid, SharedGeneratorComponent component, InteractUsingEvent args)
@@ -46,11 +46,13 @@ public override void Update(float frameTime)
         {
             supplier.Enabled = !(gen.RemainingFuel <= 0.0f || xform.Anchored == false);
 
-            supplier.MaxSupply = gen.TargetPower;
+            float maxFuelRate = 90f/3600; // 90 sheets in 60 minutes = 0.025 sheets/sec
+            var fuelRate = gen.TargetPower * maxFuelRate;
+            gen.RemainingFuel = MathF.Max(gen.RemainingFuel - (fuelRate * frameTime), 0.0f);
 
-            var eff = 1 / CalcFuelEfficiency(gen.TargetPower, gen.OptimalPower);
+            // Plasma: 400 kJ/sheet
+            supplier.MaxSupply = fuelRate * 400000f * CalcFuelEfficiency(gen.TargetPower);
 
-            gen.RemainingFuel = MathF.Max(gen.RemainingFuel - (gen.OptimalBurnRate * frameTime * eff), 0.0f);
             UpdateUi(gen);
         }
     }
diff --git a/Content.Shared/OuterRim/Generator/SharedGeneratorComponent.cs b/Content.Shared/OuterRim/Generator/SharedGeneratorComponent.cs
index 11683e624b..a94f9530a7 100644
--- a/Content.Shared/OuterRim/Generator/SharedGeneratorComponent.cs
+++ b/Content.Shared/OuterRim/Generator/SharedGeneratorComponent.cs
@@ -12,9 +12,11 @@ public sealed class SharedGeneratorComponent : Component
     public float RemainingFuel = 0.0f;
 
     [DataField("targetPower"), ViewVariables(VVAccess.ReadWrite)]
-    public float TargetPower = 15_000.0f;
+    public float TargetPower = 0;
+
     [DataField("optimalPower"), ViewVariables(VVAccess.ReadWrite)]
     public float OptimalPower = 15_000.0f;
+
     [DataField("optimalBurnRate"), ViewVariables(VVAccess.ReadWrite)]
     public float OptimalBurnRate = 1 / 4.0f; // Once every 45 seconds.
 
@@ -28,9 +30,9 @@ public sealed class SharedGeneratorComponent : Component
 [Serializable, NetSerializable]
 public sealed class SetTargetPowerMessage : BoundUserInterfaceMessage
 {
-    public int TargetPower;
+    public float TargetPower;
 
-    public SetTargetPowerMessage(int targetPower)
+    public SetTargetPowerMessage(float targetPower)
     {
         TargetPower = targetPower;
     }
diff --git a/Content.Shared/OuterRim/Generator/SharedGeneratorSystem.cs b/Content.Shared/OuterRim/Generator/SharedGeneratorSystem.cs
index b23cfd04ba..50044c5e32 100644
--- a/Content.Shared/OuterRim/Generator/SharedGeneratorSystem.cs
+++ b/Content.Shared/OuterRim/Generator/SharedGeneratorSystem.cs
@@ -11,8 +11,8 @@ public override void Initialize()
 
     }
 
-    public static float CalcFuelEfficiency(float targetPower, float optimalPower)
+    public static float CalcFuelEfficiency(float targetPower)
     {
-        return MathF.Pow(optimalPower / targetPower, 1.3f);
+        return (float)(targetPower/2 + 0.2);
     }
 }
diff --git a/Resources/Prototypes/Entities/Structures/Power/Generation/generators.yml b/Resources/Prototypes/Entities/Structures/Power/Generation/generators.yml
index f0aaa1f8f4..bd4d3c2716 100644
--- a/Resources/Prototypes/Entities/Structures/Power/Generation/generators.yml
+++ b/Resources/Prototypes/Entities/Structures/Power/Generation/generators.yml
@@ -157,6 +157,8 @@
 - type: entity
   parent: [ BaseGenerator, ConstructibleMachine ]
   id: GeneratorPlasma
+  name: plasma generator
+  description: Generates power from sheets of solid plasma.
   suffix: Plasma, 5kW
   components:
   - type: PowerSupplier
-- 
2.39.0

